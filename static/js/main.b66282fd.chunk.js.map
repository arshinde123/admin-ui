{"version":3,"sources":["services/common/logService.js","services/common/httpService.js","components/common/pagination/index.js","components/common/pagination/pagination.jsx","utils/paginate.js","components/common/table/tableHeader.jsx","components/common/table/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","components/users/usersTable.jsx","components/common/searchBox/index.js","components/common/searchBox/searchBox.jsx","components/users/index.js","components/users/users.jsx","services/userService.js","App.js","reportWebVitals.js","index.js"],"names":["log","error","console","axios","defaults","baseURL","process","ADMIN_UI_API_URL","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","className","aria-label","onClick","aria-hidden","map","page","length","paginate","items","pageNumber","startIndex","slice","take","value","TableHeader","raiseSort","path","enableSort","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","Function","columnProps","key","Component","TableBody","renderCell","item","editItem","content","id","renderEditCell","editType","editData","type","onChange","e","handleItemUpdateData","createKey","name","ed","toLowerCase","data","rowProps","checked","rowCheckedClass","editable","Table","style","overflow","UsersTable","getCheckAllContent","user","getCheckContent","isEditing","getActionsContent","checkedUsersCount","event","handleAllCheck","target","handleCheck","handleEditCompleted","handleEditCancel","handleEditUser","handleDeleteUser","users","editUser","handleUpdateUser","SearchBox","onFocus","totalCount","placeholder","currentTarget","Users","state","searchQuery","selectedUser","isLoading","checkedUsers","shouldSort","handleUserSelect","setState","handleSearch","query","handleResetAllCheckedUsers","handleSearchFocus","handleSort","handlePageChange","isChecked","filter","checkedUser","getPagedData","success","info","position","POSITION","TOP_RIGHT","handleDeleteCheckedUsers","includes","transition","Flip","allUsers","filtered","email","role","m","_id","orderBy","a","http","setTimeout","Fragment","overflowX","onDelete","handleDelete","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b66282fd.chunk.js","sourcesContent":["function log(error) {\n  console.error(error);\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  log\n};","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport logger from \"./logService\";\n\naxios.defaults.baseURL = process.env.ADMIN_UI_API_URL || 'https://geektrust.s3-ap-southeast-1.amazonaws.com';\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\n/* eslint-disable import/no-anonymous-default-export */\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","import Pagination from './pagination';\n\nexport default Pagination;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport _ from \"lodash\";\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <div className=\"float-end\">\n      <nav aria-label=\"Page navigation\">\n        <ul className=\"pagination\">\n          <li\n            className={currentPage === 1 ? \"page-item disabled\" : \"page-item\"}\n          >\n            <a\n              className=\"page-link\"\n              aria-label=\"first\"\n              onClick={() => onPageChange(1)}\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n          <li\n            className={currentPage === 1 ? \"page-item disabled\" : \"page-item\"}\n          >\n            <a\n              className=\"page-link\"\n              aria-label=\"Previous\"\n              onClick={() => onPageChange(currentPage - 1)}\n            >\n              <span aria-hidden=\"true\">&lt;</span>\n            </a>\n          </li>\n          {pages.map((page) => (\n            <li\n              key={page}\n              className={\n                page === currentPage ? \"page-item active\" : \"page-item\"\n              }\n            >\n              <a onClick={() => onPageChange(page)} className=\"page-link\">\n                {page}\n              </a>\n            </li>\n          ))}\n          <li\n            className={\n              currentPage === pages.length ? \"page-item disabled\" : \"page-item\"\n            }\n          >\n            <a\n              className=\"page-link\"\n              aria-label=\"Next\"\n              onClick={() => onPageChange(currentPage + 1)}\n            >\n              <span aria-hidden=\"true\">&gt;</span>\n            </a>\n          </li>\n          <li\n            className={\n              currentPage === pages.length ? \"page-item disabled\" : \"page-item\"\n            }\n          >\n            <a\n              className=\"page-link\"\n              aria-label=\"last\"\n              onClick={() => onPageChange(pages.length)}\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n}","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = (path, enableSort) => {\n    if (!enableSort) return;\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n\n    this.props.onSort(sortColumn);\n  };\n  renderSortIcon = (column) => {\n    if (column.path !== this.props.sortColumn.path) return null;\n    if (this.props.sortColumn.order === \"asc\")\n      return <i className=\"bi bi-sort-alpha-down\" />;\n    return <i className=\"bi bi-sort-alpha-up\" />;\n  };\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path, column.enableSort)}\n            >\n              {column.label instanceof Function\n                ? column.label(this.props.columnProps)\n                : column.label}\n              &nbsp;\n              {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column, columnProps, editItem) => {\n    if (column.content)\n      return column.content(item, columnProps, item.id === editItem.id);\n    return _.get(item, column.path);\n  };\n  renderEditCell = (\n    item,\n    column,\n    columnProps,\n    editType,\n    editData,\n    editItem\n  ) => {\n    if (editType === \"inputText\") {\n      return (\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={editItem[column.path]}\n            onChange={(e) => {\n              columnProps.handleItemUpdateData(e, column.path, item);\n            }}\n          />\n        </div>\n      );\n    } else if (editType === \"inputSelect\") {\n      return (\n        <select\n          id={this.createKey(item, column)}\n          className=\"form-select\"\n          name={column.path || column.key}\n          value={editItem[column.path]}\n          onChange={(e) =>\n            columnProps.handleItemUpdateData(e, column.path, item)\n          }\n        >\n          {editData.map((ed) => (\n            <option key={item.id + ed} value={ed.toLowerCase()}>\n              {ed}\n            </option>\n          ))}\n        </select>\n      );\n    }\n  };\n  createKey = (item, column) => {\n    return item.id + (column.path || column.key);\n  };\n  render() {\n    const { data, columns, rowProps, columnProps, editItem } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr\n            key={item.id}\n            className={item.checked ? rowProps.rowCheckedClass : \"\"}\n          >\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {column.editable === true && item.id === editItem.id\n                  ? this.renderEditCell(\n                      item,\n                      column,\n                      columnProps,\n                      column.editType,\n                      column.editData,\n                      editItem\n                    )\n                  : this.renderCell(item, column, columnProps, editItem)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import Table from './table';\n\nexport default Table;","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({\n  columns,\n  sortColumn,\n  onSort,\n  data,\n  rowProps,\n  columnProps,\n  editItem,\n}) => {\n  return (\n    <table className=\"table table-hover\" style={{ overflow: \"scroll\" }}>\n      <TableHeader\n        columns={columns}\n        sortColumn={sortColumn}\n        onSort={onSort}\n        columnProps={columnProps}\n        rowProps={rowProps}\n      />\n      <TableBody\n        data={data}\n        columns={columns}\n        columnProps={columnProps}\n        editItem={editItem}\n        rowProps={rowProps}\n      />\n    </table>\n  );\n};\n\nexport default Table;\n","/* eslint-disable no-undef */\nimport React, { Component } from \"react\";\nimport Table from \"../common/table\";\nimport \"./usersTable.css\";\n\nclass UsersTable extends Component {\n  columns = [\n    {\n      path: \"check\",\n      label: (columnProps) => this.getCheckAllContent(columnProps),\n      key: \"check\",\n      content: (user, columnProps) => this.getCheckContent(user, columnProps),\n      enableSort: false,\n      editable: false,\n    },\n    {\n      path: \"name\",\n      label: \"Name\",\n      enableSort: true,\n      editable: true,\n      editType: \"inputText\",\n      editData: \"\",\n    },\n    {\n      path: \"email\",\n      label: \"Email\",\n      enableSort: true,\n      editable: true,\n      editType: \"inputText\",\n      editData: \"\",\n    },\n    {\n      path: \"role\",\n      label: \"Role\",\n      enableSort: true,\n      editable: true,\n      editType: \"inputSelect\",\n      editData: [\"Admin\", \"Member\"],\n    },\n    {\n      path: \"actions\",\n      label: \"Actions\",\n      key: \"actions\",\n      content: (user, columnProps, isEditing) =>\n        this.getActionsContent(user, columnProps, isEditing),\n      enableSort: false,\n      editable: false,\n    },\n  ];\n\n  getCheckAllContent = (columnProps) => {\n    return (\n      <input\n        className=\"form-check-input\"\n        type=\"checkbox\"\n        checked={columnProps.pageSize === columnProps.checkedUsersCount}\n        id=\"allUsersOnPage\"\n        onChange={(event) => columnProps.handleAllCheck(event.target.checked)}\n      />\n    );\n  };\n\n  getCheckContent = (user, columnProps) => {\n    return (\n      <div className=\"form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          checked={user.checked}\n          id={user.id}\n          onChange={(event) =>\n            columnProps.handleCheck(event.target.checked, user)\n          }\n        />\n      </div>\n    );\n  };\n\n  getActionsContent = (user, columnProps, isEditing) => {\n    return isEditing ? (\n      <div className=\"mt-2\">\n        <i\n          className=\"bi bi-check-lg text-primary\"\n          onClick={() => columnProps.handleEditCompleted()}\n        ></i>\n        <i\n          className=\"bi bi-x-lg text-danger mx-2\"\n          onClick={() => columnProps.handleEditCancel()}\n        ></i>\n      </div>\n    ) : (\n      <div>\n        <i\n          className=\"bi bi-pencil-square text-primary\"\n          onClick={() => columnProps.handleEditUser(user)}\n        ></i>\n        <i\n          className=\"bi bi-trash text-danger mx-2\"\n          onClick={() => columnProps.handleDeleteUser(user)}\n        ></i>\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      users,\n      onSort,\n      sortColumn,\n      editUser,\n      pageSize,\n      checkedUsersCount,\n      handleCheck,\n      handleAllCheck,\n      handleDeleteUser,\n      handleEditUser,\n      handleEditCompleted,\n      handleEditCancel,\n      handleUpdateUser,\n    } = this.props;\n    const columnProps = {\n      checkedUsersCount,\n      pageSize,\n      handleCheck,\n      handleAllCheck,\n      handleDeleteUser,\n      handleEditUser,\n      handleEditCompleted,\n      handleEditCancel,\n      handleUpdateUser,\n      handleItemUpdateData: handleUpdateUser,\n    };\n    const rowProps = {\n      rowCheckedClass: \"th-background\",\n    };\n\n    return (\n      <Table\n        columns={this.columns}\n        data={users}\n        onSort={onSort}\n        sortColumn={sortColumn}\n        rowProps={rowProps}\n        columnProps={columnProps}\n        editItem={editUser}\n      />\n    );\n  }\n}\n\nexport default UsersTable;\n","import SearchBox from './searchBox';\n\nexport default SearchBox;","import React from \"react\";\n\nconst SearchBox = ({ value, onChange, onFocus, totalCount, placeholder }) => {\n  return (\n    <div className=\"input-group mb-3\">\n      <input\n        type=\"text\"\n        value={value}\n        className=\"form-control\"\n        placeholder={placeholder}\n        onChange={(e) => onChange(e.currentTarget.value)}\n        onFocus={(e) => onFocus(e)}\n      />\n      <span className=\"input-group-text\">\n        Total users &nbsp;&nbsp;\n        <span className=\"badge bg-primary\">{totalCount}</span>\n      </span>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import Users from './users';\n\nexport default Users;","import React, { Component } from \"react\";\nimport { toast, Flip } from \"react-toastify\";\nimport _ from \"lodash\";\nimport { getUsers } from \"../../services/userService\";\nimport Pagination from \"../common/pagination\";\nimport { paginate } from \"../../utils/paginate\";\nimport UsersTable from \"./usersTable\";\nimport SearchBox from \"../common/searchBox\";\n\nclass Users extends Component {\n  state = {\n    users: [],\n    pageSize: 10,\n    currentPage: 1,\n    searchQuery: \"\",\n    selectedUser: null,\n    sortColumn: { path: \"name\", order: \"asc\" },\n    isLoading: false,\n    checkedUsers: [],\n    editUser: {},\n    shouldSort: false,\n  };\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    try {\n      const { data: users } = await getUsers();\n      setTimeout(() => this.setState({ users, isLoading: false }), 2000); // setTimeout is used just to simulate the loader\n      // this.setState({ users, isLoading: false });\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Error while fetching users\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  handleUserSelect = (user) => {\n    this.setState({ selectedUser: user, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = (query) => {\n    if (this.state.editUser.id) return;\n    this.handleResetAllCheckedUsers();\n    this.setState({ searchQuery: query, selectedUser: null, currentPage: 1 });\n  };\n\n  handleSearchFocus = () => {\n    if (this.state.editUser.id) {\n      return toast.error(\"Please update or discard the user changes\");\n    }\n  };\n\n  handleSort = (sortColumn) => {\n    if (this.state.editUser.id) {\n      return toast.error(\"Please update or discard the user changes\");\n    }\n    this.handleResetAllCheckedUsers();\n    this.setState({ sortColumn, shouldSort: true });\n  };\n\n  handlePageChange = (page) => {\n    if (this.state.editUser.id) {\n      return toast.error(\"Please update or discard the user changes\");\n    }\n    this.handleResetAllCheckedUsers();\n    this.setState({ currentPage: page });\n  };\n\n  handleCheck = (isChecked, user) => {\n    if (isChecked) {\n      const checkedUsers = [...this.state.checkedUsers, user.id];\n      this.setState({ checkedUsers });\n    } else {\n      let checkedUsers = [...this.state.checkedUsers];\n      checkedUsers = checkedUsers.filter(\n        (checkedUser) => checkedUser !== user.id\n      );\n      this.setState({ checkedUsers });\n    }\n  };\n\n  handleAllCheck = (isChecked) => {\n    const { data: users } = this.getPagedData();\n    let checkedUsers = [];\n    if (users && users.length && isChecked) {\n      checkedUsers = users.map((user) => user.id);\n    }\n    this.setState({ checkedUsers });\n  };\n\n  handleResetAllCheckedUsers = () => {\n    this.setState({ checkedUsers: [] });\n  };\n\n  handleEditUser = (user) => {\n    if (this.state.editUser.id) {\n      return toast.error(\"Please update or discard the user changes\");\n    }\n    this.setState({ editUser: user });\n  };\n\n  handleUpdateUser = (event, path) => {\n    let editUser = { ...this.state.editUser };\n    editUser[path] = event.target.value;\n    this.setState({ editUser });\n  };\n\n  handleEditCompleted = () => {\n    let users = [...this.state.users];\n    let editUser = this.state.editUser;\n\n    users = users.map((user) => {\n      if (user.id === editUser.id) {\n        user = editUser;\n      }\n      return user;\n    });\n    this.setState({ users, editUser: {}, shouldSort: false });\n    toast.success(\"User details updated\");\n  };\n\n  handleEditCancel = () => {\n    this.setState({ editUser: {} });\n    toast.info(\"User details discarded\");\n  };\n\n  handleDeleteUser = ({ id }) => {\n    if (this.state.editUser.id) {\n      return toast.error(\"Please update or discard the user changes\");\n    }\n    let users = [...this.state.users];\n    users = users.filter((user) => user.id !== id);\n    this.setState({ users });\n    toast.info(\"User deleted\", {\n      position: toast.POSITION.TOP_RIGHT,\n    });\n  };\n\n  handleDeleteCheckedUsers = () => {\n    if (this.state.editUser.id) {\n      return toast.error(\"Please update or discard the user changes\");\n    }\n    let checkedUsers = [...this.state.checkedUsers];\n    let users = this.state.users;\n\n    if (!checkedUsers.length) {\n      toast.error(\"Please select user(s) to delete\", {\n        transition: Flip,\n      });\n      return;\n    }\n    users = users.filter((user) => !checkedUsers.includes(user.id));\n    toast.info(\n      `${checkedUsers.length} ${\n        checkedUsers.length > 1 ? \"users\" : \"user\"\n      } deleted`,\n      {\n        position: toast.POSITION.TOP_RIGHT,\n      }\n    );\n    this.setState({ users, checkedUsers: [] });\n    this.handleResetAllCheckedUsers();\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      users: allUsers,\n      selectedUser,\n      searchQuery,\n      sortColumn,\n      shouldSort,\n      checkedUsers,\n    } = this.state;\n\n    let filtered = allUsers || [];\n\n    if (searchQuery) {\n      filtered = allUsers.filter(\n        (user) =>\n          user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n          user.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n          user.role.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n    else if (selectedUser && selectedUser.id) {\n      filtered = allUsers.filter((m) => m._id === selectedUser._id);\n    }\n\n    const sorted = shouldSort\n      ? _.orderBy(filtered, [sortColumn.path], [sortColumn.order])\n      : filtered;\n\n    let users = paginate(sorted, currentPage, pageSize);\n\n    if (checkedUsers.length) {\n      users = users.map((user) => {\n        user.checked = checkedUsers.includes(user.id);\n        return user;\n      });\n    } else {\n      users = users.map((user) => {\n        user.checked = false;\n        return user;\n      });\n    }\n\n    return { totalCount: filtered.length, data: users };\n  };\n\n  render() {\n    const { pageSize, currentPage, sortColumn, checkedUsers, editUser } =\n      this.state;\n\n    const { totalCount, data: users } = this.getPagedData();\n\n    if (this.state.isLoading)\n      return (\n        <div className=\"spinner-grow text-primary position-absolute bottom-50 end-50\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      );\n\n    if (!users.length && currentPage > 1)\n      this.handlePageChange(currentPage - 1);\n\n    return (\n      <React.Fragment>\n        <div className=\"row mt-5\">\n          <SearchBox\n            value={this.state.searchQuery}\n            onChange={this.handleSearch}\n            onFocus={this.handleSearchFocus}\n            totalCount={totalCount}\n            placeholder=\"Search by name, email, role\"\n          />\n        </div>\n        {!users.length ? (\n          <span className=\"badge bg-danger mb-5\">No user(s) found</span>\n        ) : (\n          <React.Fragment>\n            <div className=\"row mx-1\" style={{ overflowX: \"auto\" }}>\n              <UsersTable\n                users={users}\n                sortColumn={sortColumn}\n                checkedUsersCount={checkedUsers.length}\n                editUser={editUser}\n                pageSize={pageSize}\n                onDelete={this.handleDelete}\n                onSort={this.handleSort}\n                handleDeleteUser={this.handleDeleteUser}\n                handleCheck={this.handleCheck}\n                handleAllCheck={this.handleAllCheck}\n                handleEditUser={this.handleEditUser}\n                handleUpdateUser={this.handleUpdateUser}\n                handleEditCompleted={this.handleEditCompleted}\n                handleEditCancel={this.handleEditCancel}\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-3 col-xs-12 mb-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-danger\"\n                  onClick={this.handleDeleteCheckedUsers}\n                >\n                  Delete selected{\" \"}\n                  {checkedUsers.length > 0 && (\n                    <span className=\"badge bg-danger\">\n                      {checkedUsers.length}\n                    </span>\n                  )}\n                </button>\n              </div>\n              <div className=\"col-md-9 col-xs-12\">\n                <Pagination\n                  itemsCount={totalCount}\n                  pageSize={pageSize}\n                  onPageChange={this.handlePageChange}\n                  currentPage={currentPage}\n                />\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Users;\n","import http from './common/httpService';\n\nexport function getUsers() {\n  return http.get('/adminui-problem/members.json')\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport Users from './components/users';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <ToastContainer />\n      <nav className=\"navbar navbar-light bg-primary\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand text-light\">\n            Admin-UI\n          </a>\n        </div>\n      </nav>\n      <div className=\"container\">\n        <Users />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}