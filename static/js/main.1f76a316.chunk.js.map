{"version":3,"sources":["services/common/logService.js","services/common/httpService.js","utils/index.js","components/common/pagination/index.js","components/common/pagination/pagination.jsx","components/common/table/tableHeader.jsx","components/common/table/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","components/users/usersTable.jsx","components/common/searchBox/index.js","components/common/searchBox/searchBox.jsx","components/users/index.js","components/users/users.jsx","services/userService.js","App.js","reportWebVitals.js","index.js"],"names":["log","error","console","axios","defaults","baseURL","process","ADMIN_UI_API_URL","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","paginate","items","pageNumber","pageSize","startIndex","slice","Pagination","props","itemsCount","currentPage","onPageChange","pagesCount","Math","ceil","pages","start","end","step","ranges","i","push","length","range","className","aria-label","onClick","aria-hidden","map","page","TableHeader","this","columns","column","label","Function","columnProps","path","key","Component","TableBody","renderCell","item","editItem","content","id","renderEditCell","editType","editData","type","value","onChange","e","handleItemUpdateData","createKey","name","ed","toLowerCase","data","rowProps","checked","rowCheckedClass","editable","Table","style","overflow","UsersTable","getCheckAllContent","user","getCheckContent","isEditing","getActionsContent","usersCount","checkedUsersCount","event","handleAllCheck","target","handleCheck","handleEditCompleted","handleEditCancel","handleEditUser","handleDeleteUser","users","editUser","handleUpdateUser","SearchBox","onFocus","totalCount","placeholder","currentTarget","Users","state","searchQuery","isLoading","checkedUsers","handleSearch","query","handleResetAllCheckedUsers","setState","handleSearchFocus","handlePageChange","isChecked","filter","checkedUser","getPagedData","success","info","position","POSITION","TOP_RIGHT","handleDeleteCheckedUsers","includes","transition","Flip","allUsers","filtered","email","role","renderLoader","renderSearchBox","renderNoUserFound","renderUserTable","overflowX","onDelete","handleDelete","renderDeleteSelectedUser","renderPagination","a","http","setTimeout","Fragment","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f76a316.chunk.js","sourcesContent":["function log(error) {\n  console.error(error);\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  log\n};","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport logger from \"./logService\";\n\naxios.defaults.baseURL = process.env.ADMIN_UI_API_URL || 'https://geektrust.s3-ap-southeast-1.amazonaws.com';\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\n/* eslint-disable import/no-anonymous-default-export */\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","export function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return items.slice(startIndex, startIndex + pageSize);\n}\n\nexport const range = (start, end, step = 1) => {\n  let ranges = [];\n  for(let i=0; i<end; i++) {\n    i === 0 ? ranges.push(start) : ranges.push(ranges[ranges.length - 1] + step);\n  }\n  return ranges;\n}","import Pagination from './pagination';\n\nexport default Pagination;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { range } from '../../../utils'\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = range(1, pagesCount);\n\n  return (\n    <div className=\"float-end\">\n      <nav aria-label=\"Page navigation\">\n        <ul className=\"pagination\">\n          <li\n            className={currentPage === 1 ? \"page-item disabled\" : \"page-item\"}\n          >\n            <a\n              className=\"page-link\"\n              aria-label=\"first\"\n              onClick={() => onPageChange(1)}\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n          <li\n            className={currentPage === 1 ? \"page-item disabled\" : \"page-item\"}\n          >\n            <a\n              className=\"page-link\"\n              aria-label=\"Previous\"\n              onClick={() => onPageChange(currentPage - 1)}\n            >\n              <span aria-hidden=\"true\">&lt;</span>\n            </a>\n          </li>\n          {pages.map((page) => (\n            <li\n              key={page}\n              className={\n                page === currentPage ? \"page-item active\" : \"page-item\"\n              }\n            >\n              <a onClick={() => onPageChange(page)} className=\"page-link\">\n                {page}\n              </a>\n            </li>\n          ))}\n          <li\n            className={\n              currentPage === pages.length ? \"page-item disabled\" : \"page-item\"\n            }\n          >\n            <a\n              className=\"page-link\"\n              aria-label=\"Next\"\n              onClick={() => onPageChange(currentPage + 1)}\n            >\n              <span aria-hidden=\"true\">&gt;</span>\n            </a>\n          </li>\n          <li\n            className={\n              currentPage === pages.length ? \"page-item disabled\" : \"page-item\"\n            }\n          >\n            <a\n              className=\"page-link\"\n              aria-label=\"last\"\n              onClick={() => onPageChange(pages.length)}\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n            >\n              {column.label instanceof Function\n                ? column.label(this.props.columnProps)\n                : column.label}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\n\nclass TableBody extends Component {\n  renderCell = (item, column, columnProps, editItem) => {\n    if (column.content)\n      return column.content(item, columnProps, item.id === editItem.id);\n    return item[column.path];\n  };\n\n  renderEditCell = (\n    item,\n    column,\n    columnProps,\n    editType,\n    editData,\n    editItem\n  ) => {\n    if (editType === \"inputText\") {\n      return (\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={editItem[column.path]}\n            onChange={(e) => {\n              columnProps.handleItemUpdateData(e, column.path, item);\n            }}\n          />\n        </div>\n      );\n    } else if (editType === \"inputSelect\") {\n      return (\n        <select\n          id={this.createKey(item, column)}\n          className=\"form-select\"\n          name={column.path || column.key}\n          value={editItem[column.path]}\n          onChange={(e) =>\n            columnProps.handleItemUpdateData(e, column.path, item)\n          }\n        >\n          {editData.map((ed) => (\n            <option key={item.id + ed} value={ed.toLowerCase()}>\n              {ed}\n            </option>\n          ))}\n        </select>\n      );\n    }\n  };\n\n  createKey = (item, column) => {\n    return item.id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns, rowProps, columnProps, editItem } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr\n            key={item.id}\n            className={item.checked ? rowProps.rowCheckedClass : \"\"}\n          >\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {column.editable === true && item.id === editItem.id\n                  ? this.renderEditCell(\n                      item,\n                      column,\n                      columnProps,\n                      column.editType,\n                      column.editData,\n                      editItem\n                    )\n                  : this.renderCell(item, column, columnProps, editItem)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import Table from './table';\n\nexport default Table;","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({\n  columns,\n  data,\n  rowProps,\n  columnProps,\n  editItem,\n}) => {\n  return (\n    <table className=\"table table-hover\" style={{ overflow: \"scroll\" }}>\n      <TableHeader\n        columns={columns}\n        columnProps={columnProps}\n        rowProps={rowProps}\n      />\n      <TableBody\n        data={data}\n        columns={columns}\n        columnProps={columnProps}\n        editItem={editItem}\n        rowProps={rowProps}\n      />\n    </table>\n  );\n};\n\nexport default Table;\n","/* eslint-disable no-undef */\nimport React, { Component } from \"react\";\nimport Table from \"../common/table\";\nimport \"./usersTable.css\";\n\nclass UsersTable extends Component {\n  columns = [\n    {\n      path: \"check\",\n      label: (columnProps) => this.getCheckAllContent(columnProps),\n      key: \"check\",\n      content: (user, columnProps) => this.getCheckContent(user, columnProps),\n      editable: false,\n    },\n    {\n      path: \"name\",\n      label: \"Name\",\n      editable: true,\n      editType: \"inputText\",\n      editData: \"\",\n    },\n    {\n      path: \"email\",\n      label: \"Email\",\n      editable: true,\n      editType: \"inputText\",\n      editData: \"\",\n    },\n    {\n      path: \"role\",\n      label: \"Role\",\n      editable: true,\n      editType: \"inputSelect\",\n      editData: [\"Admin\", \"Member\"],\n    },\n    {\n      path: \"actions\",\n      label: \"Actions\",\n      key: \"actions\",\n      content: (user, columnProps, isEditing) =>\n        this.getActionsContent(user, columnProps, isEditing),\n      editable: false,\n    },\n  ];\n\n  getCheckAllContent = (columnProps) => {\n    return (\n      <input\n        className=\"form-check-input\"\n        type=\"checkbox\"\n        checked={columnProps.usersCount === columnProps.checkedUsersCount}\n        id=\"checkAllUsers\"\n        onChange={(event) => columnProps.handleAllCheck(event.target.checked)}\n      />\n    );\n  };\n\n  getCheckContent = (user, columnProps) => {\n    return (\n      <div className=\"form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          checked={user.checked}\n          id={user.id}\n          onChange={(event) =>\n            columnProps.handleCheck(event.target.checked, user)\n          }\n        />\n      </div>\n    );\n  };\n\n  getActionsContent = (user, columnProps, isEditing) => {\n    return isEditing ? (\n      <div className=\"mt-2\">\n        <i\n          className=\"bi bi-check-lg text-primary\"\n          onClick={() => columnProps.handleEditCompleted()}\n        ></i>\n        <i\n          className=\"bi bi-x-lg text-danger mx-2\"\n          onClick={() => columnProps.handleEditCancel()}\n        ></i>\n      </div>\n    ) : (\n      <div>\n        <i\n          className=\"bi bi-pencil-square text-primary\"\n          onClick={() => columnProps.handleEditUser(user)}\n        ></i>\n        <i\n          className=\"bi bi-trash text-danger mx-2\"\n          onClick={() => columnProps.handleDeleteUser(user)}\n        ></i>\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      users,\n      editUser,\n      usersCount,\n      checkedUsersCount,\n      handleCheck,\n      handleAllCheck,\n      handleDeleteUser,\n      handleEditUser,\n      handleEditCompleted,\n      handleEditCancel,\n      handleUpdateUser,\n    } = this.props;\n    const columnProps = {\n      checkedUsersCount,\n      usersCount,\n      handleCheck,\n      handleAllCheck,\n      handleDeleteUser,\n      handleEditUser,\n      handleEditCompleted,\n      handleEditCancel,\n      handleUpdateUser,\n      handleItemUpdateData: handleUpdateUser,\n    };\n    const rowProps = {\n      rowCheckedClass: \"th-background\",\n    };\n\n    return (\n      <Table\n        columns={this.columns}\n        data={users}\n        rowProps={rowProps}\n        columnProps={columnProps}\n        editItem={editUser}\n      />\n    );\n  }\n}\n\nexport default UsersTable;\n","import SearchBox from './searchBox';\n\nexport default SearchBox;","import React from \"react\";\n\nconst SearchBox = ({ value, onChange, onFocus, totalCount, placeholder }) => {\n  return (\n    <div className=\"input-group mb-3\">\n      <input\n        type=\"text\"\n        value={value}\n        className=\"form-control\"\n        placeholder={placeholder}\n        onChange={(e) => onChange(e.currentTarget.value)}\n        onFocus={(e) => onFocus(e)}\n      />\n      <span className=\"input-group-text\">\n        Total users &nbsp;&nbsp;\n        <span className=\"badge bg-primary\">{totalCount}</span>\n      </span>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import Users from './users';\n\nexport default Users;","import React, { Component } from \"react\";\nimport { toast, Flip } from \"react-toastify\";\nimport { getUsers } from \"../../services/userService\";\nimport Pagination from \"../common/pagination\";\nimport { paginate } from \"../../utils\";\nimport UsersTable from \"./usersTable\";\nimport SearchBox from \"../common/searchBox\";\n\nclass Users extends Component {\n  state = {\n    users: [],\n    pageSize: 10,\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    checkedUsers: [],\n    editUser: {},\n  };\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    try {\n      const { data: users } = await getUsers();\n      setTimeout(() => this.setState({ users, isLoading: false }), 2000); // setTimeout is used just to simulate the loader\n      // this.setState({ users, isLoading: false });\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Error while fetching users\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  handleSearch = (query) => {\n    if (this.state.editUser.id) return;\n    this.handleResetAllCheckedUsers();\n    this.setState({ searchQuery: query, currentPage: 1 });\n  };\n\n  handleSearchFocus = () => {\n    if (this.state.editUser.id) {\n      return toast.error(\"Please update or discard existing user changes\");\n    }\n  };\n\n  handlePageChange = (page) => {\n    if (this.state.editUser.id) {\n      return toast.error(\"Please update or discard existing user changes\");\n    }\n    this.handleResetAllCheckedUsers();\n    this.setState({ currentPage: page });\n  };\n\n  handleCheck = (isChecked, user) => {\n    if (isChecked) {\n      const checkedUsers = [...this.state.checkedUsers, user.id];\n      this.setState({ checkedUsers });\n    } else {\n      let checkedUsers = [...this.state.checkedUsers];\n      checkedUsers = checkedUsers.filter(\n        (checkedUser) => checkedUser !== user.id\n      );\n      this.setState({ checkedUsers });\n    }\n  };\n\n  handleAllCheck = (isChecked) => {\n    const { data: users } = this.getPagedData();\n    let checkedUsers = [];\n    if (users && users.length && isChecked) {\n      checkedUsers = users.map((user) => user.id);\n    }\n    this.setState({ checkedUsers });\n  };\n\n  handleResetAllCheckedUsers = () => {\n    this.setState({ checkedUsers: [] });\n  };\n\n  handleEditUser = (user) => {\n    if (this.state.editUser.id) {\n      return toast.error(\"Please update or discard existing user changes\");\n    }\n    this.setState({ editUser: user });\n  };\n\n  handleUpdateUser = (event, path) => {\n    let editUser = { ...this.state.editUser };\n    editUser[path] = event.target.value;\n    this.setState({ editUser });\n  };\n\n  handleEditCompleted = () => {\n    let users = [ ...this.state.users ];\n    let editUser = { ...this.state.editUser };\n\n    users = users.map((user) => {\n      if (user.id === editUser.id) {\n        user = editUser;\n      }\n      return user;\n    });\n    this.setState({ users, editUser: {} });\n    toast.success(\"User details updated\");\n  };\n\n  handleEditCancel = () => {\n    this.setState({ editUser: {} });\n    toast.info(\"User details discarded\");\n  };\n\n  handleDeleteUser = ({ id }) => {\n    if (this.state.editUser.id) {\n      return toast.error(\"Please update or discard existing user changes\");\n    }\n    let users = [...this.state.users];\n    users = users.filter((user) => user.id !== id);\n    this.setState({ users });\n    toast.info(\"User deleted\", {\n      position: toast.POSITION.TOP_RIGHT,\n    });\n  };\n\n  handleDeleteCheckedUsers = () => {\n    if (this.state.editUser.id) {\n      return toast.error(\"Please update or discard existing user changes\");\n    }\n    let checkedUsers = [ ...this.state.checkedUsers ];\n    let users = [ ...this.state.users ];\n\n    if (!checkedUsers.length) {\n      toast.error(\"Please select user(s) to delete\", {\n        transition: Flip,\n      });\n      return;\n    }\n    users = users.filter((user) => !checkedUsers.includes(user.id));\n    toast.info(\n      `${checkedUsers.length} ${\n        checkedUsers.length > 1 ? \"users\" : \"user\"\n      } deleted`,\n      {\n        position: toast.POSITION.TOP_RIGHT,\n      }\n    );\n    this.setState({ users, checkedUsers: [] });\n    this.handleResetAllCheckedUsers();\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      users: allUsers,\n      searchQuery,\n      checkedUsers,\n    } = this.state;\n\n    let filtered = allUsers || [];\n\n    if (searchQuery) {\n      filtered = allUsers.filter(\n        (user) =>\n          user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n          user.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n          user.role.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n\n    let users = paginate(filtered, currentPage, pageSize);\n\n    if (checkedUsers.length) {\n      users = users.map((user) => {\n        user.checked = checkedUsers.includes(user.id);\n        return user;\n      });\n    } else {\n      users = users.map((user) => {\n        user.checked = false;\n        return user;\n      });\n    }\n\n    return { totalCount: filtered.length, data: users };\n  };\n\n  renderLoader = () => {\n    return (\n      <div\n        className=\"spinner-grow text-primary position-absolute bottom-50 end-50\"\n        role=\"status\"\n      >\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    );\n  };\n\n  renderSearchBox = (totalCount) => {\n    return (\n      <div className=\"row mt-5\">\n        <div className=\"row mt-5\">\n          <SearchBox\n            value={this.state.searchQuery}\n            onChange={this.handleSearch}\n            onFocus={this.handleSearchFocus}\n            totalCount={totalCount}\n            placeholder=\"Search by name, email, role\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  renderNoUserFound = () => {\n    return <span className=\"badge bg-danger mb-5\">No user(s) found</span>;\n  };\n\n  renderUserTable = (users) => {\n    const { checkedUsers, editUser } = this.state;\n\n    return (\n      <div className=\"row mx-1\" style={{ overflowX: \"auto\" }}>\n        <UsersTable\n          users={users}\n          checkedUsersCount={checkedUsers.length}\n          editUser={editUser}\n          usersCount={users.length}\n          onDelete={this.handleDelete}\n          handleDeleteUser={this.handleDeleteUser}\n          handleCheck={this.handleCheck}\n          handleAllCheck={this.handleAllCheck}\n          handleEditUser={this.handleEditUser}\n          handleUpdateUser={this.handleUpdateUser}\n          handleEditCompleted={this.handleEditCompleted}\n          handleEditCancel={this.handleEditCancel}\n        />\n      </div>\n    );\n  };\n\n  renderDeleteSelectedUser = () => {\n    const { checkedUsers } = this.state;\n    return (\n      <div className=\"col-md-3 col-xs-12 mb-2\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger\"\n          onClick={this.handleDeleteCheckedUsers}\n        >\n          Delete selected{\" \"}\n          {checkedUsers.length > 0 && (\n            <span className=\"badge bg-danger\">{checkedUsers.length}</span>\n          )}\n        </button>\n      </div>\n    );\n  };\n\n  renderPagination = (totalCount) => {\n    const { pageSize, currentPage } = this.state;\n\n    return (\n      <div className=\"col-md-9 col-xs-12\">\n        <Pagination\n          itemsCount={totalCount}\n          pageSize={pageSize}\n          onPageChange={this.handlePageChange}\n          currentPage={currentPage}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { totalCount, data: users } = this.getPagedData();\n\n    if (this.state.isLoading) return this.renderLoader();\n\n    if (!users.length && this.state.currentPage > 1)\n      this.handlePageChange(this.state.currentPage - 1);\n\n    return (\n      <React.Fragment>\n        {this.renderSearchBox(totalCount)}\n        {!users.length ? (\n          this.renderNoUserFound()\n        ) : (\n          <React.Fragment>\n            {this.renderUserTable(users)}\n            <div className=\"row\">\n              {this.renderDeleteSelectedUser()}\n              {this.renderPagination(totalCount)}\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Users;\n","import http from './common/httpService';\n\nexport function getUsers() {\n  return http.get('/adminui-problem/members.json')\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport Users from './components/users';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <ToastContainer />\n      <nav className=\"navbar navbar-light bg-primary\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand text-light\">\n            Admin-UI\n          </a>\n        </div>\n      </nav>\n      <div className=\"mx-5\">\n        <Users />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}